
const color = {
  white: `#fafafa`,
  lightwhite: `#ecf0f2`,
  darkwhite: `#eaeaea`,
  trans: `transparent`,
  sky: `#f1f8ff`,
  primary: `#4a92e4`,
  yellow: `#fff252`,
  orange: `#ff692d`,
  red: `#ed6464`,
  blue: `#0058b7`,
  green: `#00c73c`,
  black: `#101010`,
  dark: `#353535`,
  lightblack: `#303030`,
  semiblack: `#505050`,
  alphablack: `#202020a0`,
  gray: `#a0a0a0`,
  darkgray: `#909090`,
  lightgray: `#dedede`,
  alphagray: `#a0a0a090`,
  up: `#b30202`,
  down: `#2b49c1`,
  plus: `#b30202`,
  minus: `#2b49c1`,
  select: `#f6f8fa`,
  back: `#202020a0`,
}

const cs = {
  color: { ...color },

  themecolor: (theme) => (theme === 'dark-theme' ? color.lightwhite : color.black),

  float: {
    r: 'float: right;',
    l: 'float: left;',
    right: 'float: right;',
    left: 'float: left;',
    none: 'float: none;',

    get: (v) => `float: ${v};`,
  },

  min: {
    width: (v) => Number.isInteger(v) ? `min-width: ${v}px;` : `min-width: ${v};`,
    height: (v) => Number.isInteger(v) ? `min-height: ${v}px;` : `min-height: ${v};`,
  },

  max: {
    width: (v) => Number.isInteger(v) ? `max-width: ${v}px;` : `max-width: ${v};`,
    height: (v) => Number.isInteger(v) ? `max-height: ${v}px;` : `max-height: ${v};`,
  },

  right: (v) => Number.isInteger(v) ? `left: unset; right: ${v}px;` : `left: unset; right: ${v};`,
  left: (v) => Number.isInteger(v) ? `right: unset; left: ${v}px;` : `right: unset; left: ${v};`,
  top: (v) => Number.isInteger(v) ? `bottom:unset; top: ${v}px;` : `bottom:unset; top: ${v};`,
  bottom: (v) => Number.isInteger(v) ? `top: unset; bottom: ${v}px;` : `top: unset; bottom: ${v};`,

  noselect: 'user-select: none;',

  pos: {
    absolute: 'position: absolute;',
    relative: 'position: relative;',
    fixed: 'position: fixed;',

    ltop: 'left: 0; top: 0;',
    rtop: 'right: 0; bottom: 0;',
    lbottom: 'left: 0; bottom: 0;',
    rbottom: 'right: 0; bottom: 0;',

    get: (v) => `position: ${v};`,
  },

  mouse: {
    pointer: 'cursor: pointer;',
    default: 'cursor: default;',
    cross: 'cursor: crosshair;',

    get: (v) => `cursor: ${v};`,
  },

  disp: {
    hide: 'display: none;',
    none: 'display: none;',
    block: 'display: block;',
    inblock: 'display: inline-block;',
    inline: 'display: inline;',
    
    visible: 'visibility: visible;',
    invisible: 'visibility: invisible;',
    hidden: 'visibility: hidden;',

    get: (v) => `display: ${v};`,
  },

  over: {
    hidden: 'overflow: hidden;',
    xhidden: 'overflow-x: hidden;',
    yhidden: 'overflow-y: hidden;',
    auto: 'overflow: auto;',
    xauto: 'overflow-x: auto;',
    yauto: 'overflow-y: auto;',
    visible: 'overflow: visible;',
    xvisible: 'overflow-x: visible;',
    yvisible: 'overflow-y: visible;',
    unset: 'overflow: unset;',

    get: (v) => `overflow: ${v};`,
  },

  size: {
    full: `width: 100%; height: 100%;`,
    auto: `width: auto; height: auto;`,
    wauto: `height: 100%; width: auto;`,
    hauto: `width: 100%; height: auto;`,
    fit: `width: fit-content; height: fit-content;`,
    wfit: `height: 100%; width: fit-content;`,
    hfit: `width: 100%; height: fit-content;`,
    max: `width: max-content; height: max-content;`,
    wmax: `height: 100%; width: max-content;`,
    hmax: `width: 100%; height: max-content;`,
    min: `width: min-content; height: min-content;`,
    wmin: `height: 100%; width: min-content;`,
    hmin: `width: 100%; height: min-content;`,

    get: (v) => Number.isInteger(v) ? `width: ${v}px; height: ${v}px;` : `width: ${v}; height: ${v};`,
  },

  resize: {
    none: `resize: none;`,
    vertical: `resize: vertical;`,
    horizontal: `resize: horizontal;`,

    get: (v) => `resize: ${v};`,
  },

  h: {
    xl: 'height: 48px;',
    lg: 'height: 38px;',
    md: 'height: 34px;',
    sm: 'height: 28px;',
    xs: 'height: 20px;',
    full: 'height: 100%;',
    half: 'height: 50%;',
    r50: 'height: 50%;',
    r33: 'height: 33.333%;',
    r25: 'height: 25%;',
    r20: 'height: 20%;',
    r10: 'height: 10%;',
    auto: 'height: auto;',
    fit: 'height: fit-content;',
    min: 'height: min-content;',
    max: 'height: max-content;',
    dsxl: 'width: 1200px;',
    dslg: 'width: 800px;',
    dsmd: 'width: 640px;',
    dssm: 'width: 420px;',
    dsxs: 'width: 320px;',

    calc: (v) => Number.isInteger(v) ? `height: calc(${v}px);` : `height: calc(${v});`,
    get: (v) => Number.isInteger(v) ? `height: ${v}px;` : `height: ${v};`,
  },

  w: {
    xl: 'width: 48px;',
    lg: 'width: 38px;',
    md: 'width: 34px;',
    sm: 'width: 28px;',
    xs: 'width: 20px;',
    full: 'width: 100%;',
    half: 'width: 50%;',
    r50: 'width: 50%;',
    r33: 'width: 33.333%;',
    r25: 'width: 25%;',
    r20: 'width: 20%;',
    r10: 'width: 10%;',
    auto: 'width: auto;',
    fit: 'width: fit-content;',
    min: 'width: min-content;',
    max: 'width: max-content;',
    dsxl: 'width: 1280px;',
    dslg: 'width: 800px;',
    dsmd: 'width: 640px;',
    dssm: 'width: 480px;',
    dsxs: 'width: 320px;',

    calc: (v) => Number.isInteger(v) ? `width: calc(${v}px);` : `width: calc(${v});`,
    get: (v) => Number.isInteger(v) ? `width: ${v}px;` : `width: ${v};`,
  },

  z: {
    back: 'z-index: 0;',
    front: 'z-index: 1;',
    icon: 'z-index: 9;',
    menu: 'z-index: 99999;',
    header: 'z-index: 199999;',
    popup: 'z-index: 999999;',
    top: 'z-index: 9999999;',

    get: (v) => `z-index: ${v};`,
  },

  font: {
    xs: `font-size: 10px;`,
    sm: `font-size: 12px;`,
    md: `font-size: 14px;`,
    lg: `font-size: 16px;`,
    xl: `font-size: 18px;`,
    xxl: `font-size: 22px;`,
    t1: `font-size: 26px; font-weight: 500;`,
    t2: `font-size: 34px; font-weight: 550;`,
    t3: `font-size: 40px; font-weight: 550;`,
    t4: `font-size: 48px; font-weight: 600;`,
    t5: `font-size: 54px; font-weight: 700;`,
    left: `text-align: left;`,
    center: `text-align: center;`,
    right: `text-align: right;`,
    thin: `font-weight: 300;`,
    thinbold: `font-weight: 400;`,
    bold: `font-weight: 550;`,
    thickbold: `font-weight: 600;`,
    white: `color: ${color.white};`,
    lightwhite: `color: ${color.lightwhite};`,
    gray: `color: ${color.gray};`,
    trans: `color: ${color.trans};`,
    primary: `color: ${color.primary};`,
    blue: `color: ${color.blue};`,
    yellow: `color: ${color.yellow};`,
    orange: `color: ${color.orange};`,
    red: `color: ${color.red};`,
    green: `color: ${color.green};`,
    black: `color: ${color.black};`,
    dark: `color: ${color.dark};`,
    lightblack: `color: ${color.lightblack};`,
    alphablack: `color: ${color.alphablack};`,
    darkgray: `color: ${color.darkgray};`,
    lightgray: `color: ${color.lightgray};`,
    minus: `color: ${color.minus};`,
    plus: `color: ${color.plus};`,
    preline: `white-space: pre-line;`,
    prewrap: `white-space: pre-wrap;`,
    underline: `text-decoration: underline;`,
    cancelline: `text-decoration: line-through;`,
    noneline: `text-decoration: none;`,
    upper: `text-transform: uppercase;`,
    lower: `text-transform: lowercase;`,

    family: (v) => `font-family: ${v};`,
    style: (v) => `font-family: ${v};`,
    deco: (v) => `text-decoration: ${v};`,
    line: (v) => Number.isInteger(v) ? `line-height: ${v}px;` : `line-height: ${v};`,
    color: (v) => `color: ${v};`,
    size: (v) => Number.isInteger(v) ? `font-size: ${v}px;` : `font-size: ${v};`,
    get: (v) => Number.isInteger(v) ? `font-size: ${v}px;` : `font: ${v};`,
    weight: (v) => `font-weight: ${v};`,
    align: (v) => `text-align: ${v};`,
  },

  opac: {
    invisible: `opacity: 0;`,
    hide: `opacity: 0.1;`,
    alpha: `opacity: 0.5;`,
    show: `opacity: 0.9;`,
    visible: `opacity: 1;`,

    get: (v) => `opacity: ${v};`,
  },

  anim: {
    hide: `transition: all 200ms ease-out;`,
    show: `transition: all 200ms ease-in;`,
        
    in: (v) => Number.isInteger(v) ? `transition: all ${v}ms ease-in;` : `transition: all ${v} ease-in;`,
    out: (v) => Number.isInteger(v) ? `transition: all ${v}ms ease-out;` : `transition: all ${v} ease-out;`,
    get: (v) => `transition: ${v};`,

    name: (v) => `animation-name: ${v};`,
    time: (v) => Number.isInteger(v) ? `animation-duration: ${v}ms;` : `animation-duration: ${v};`,
    showin: (v) => `animation: show-in linear 1 forwards ${v ? v : "150ms"}; @keyframes show-in { from { opacity: 0.1;  } to { opacity: 1; } };`,
    showout: (v) => `animation: show-out linear 1 forwards ${v ? v : "150ms"}; @keyframes show-out { from { opacity: 1;  } to { opacity: 0; } };`,
    fadein: (v) => `animation: fadein linear 1 forwards ${v ? v : "150ms"}; @keyframes fadein { from { opacity: 0; } to { opacity: 1; } };`,
    fadeout: (v) => `animation: fadeout linear 1 forwards ${v ? v : "150ms"}; @keyframes fadeout { from { opacity: 1; } to { opacity: 0; } };`,
    slidein: (v) => `animation: slidein linear 1 forwards ${v ? v : "150ms"}; @keyframes slidein { from  { transform: translateX(-100%); opacity: 0.3; } to { transform: translateX(0%); opacity: 1; } };`,
    slideout: (v) => `animation: slideout linear 1 forwards ${v ? v : "150ms"}; @keyframes slideout { from  { transform: translateX(0%);  opacity: 0.3; } to { transform: translateX(-100%);  opacity: 1; } };`,    
    slidedown: (v) => `animation: slidedown linear 1 forwards ${v ? v : "150ms"}; @keyframes slidedown { from  { transform: translateY(-100%); opacity: 0.3; } to { transform: translateY(0%); opacity: 1; } };`,
    slideup: (v) => `animation: slideup linear 1 forwards ${v ? v : "150ms"}; @keyframes slideup { from  { transform: translateY(0%);  opacity: 0.3; } to { transform: translateY(-100%);  opacity: 1; } };`,    
  },

  align: {
    top: `position: absolute; bottom: unset; top: 0;`,
    bottom: `position: absolute; top: unset; bottom: 0;`,
    left: `position: absolute; right: unset; left: 0;`,
    right: `position: absolute; left: unset; right: 0;`,

    center: `position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);`,

    ycenter: `position: absolute; top: 50%; transform: translateY(-50%);`,
    xcenter: `position: absolute; left: 50%; transform: translateX(-50%);`,
    ltop: `position: absolute; left: 5px; top: 5px;`,
    rtop: `position: absolute; right: 5px; top: 5px;`,
    lbottom: `position: absolute; left: 5px; bottom: 5px;`,
    rbottom: `position: absolute; right: 5px; bottom: 5px;`,

    
    x: (v) => Number.isInteger(v) ? `transform: translateX(${v}px);` : `transform: translateX(${v});`,
    y: (v) => Number.isInteger(v) ? `transform: translateY(${v}px);;` : `transform: translateY(${v});`,
    vertical: (v) => `vertical-align : ${v};`,
    get: (v) => `transform: ${v};`,
  },

  bg: {
    white: `background: ${color.white};`,
    lightwhite: `background: ${color.lightwhite};`,
    darkwhite: `background: ${color.darkwhite};`,
    gray: `background: ${color.gray};`,
    trans: `background: ${color.trans};`,
    sky: `background: ${color.sky};`,
    primary: `background: ${color.primary};`,
    blue: `background: ${color.blue};`,
    yellow: `background: ${color.yellow};`,
    orange: `background: ${color.orange};`,
    red: `background: ${color.red};`,
    green: `background: ${color.green};`,
    black: `background: ${color.black};`,
    dark: `background: ${color.dark};`,
    lightblack: `background: ${color.lightblack};`,
    alphablack: `background: ${color.alphablack};`,
    darkgray: `background: ${color.darkgray};`,
    lightgray: `background: ${color.lightgray};`,
    alphagray: `background: ${color.alphagray};`,
    select: `background: ${color.select};`,
    back: `background: ${color.back};`,
    vgradint: `background: linear-gradient(45deg,#f1f8ff33,#c8e1ffa0);`,
    hgradint: `background: linear-gradient(180deg,#e8f1ffa0,#a7cfffa0,#147effa0);`,

    color: (v) => `background: ${v};`,
    get: (v) => `background: ${v};`,
  },

  icon: {
    xxl: `width: 50px; height: 50px;`,
    xl: `width: 42px; height: 42px;`,
    lg: `width: 34px; height: 34px;`,
    md: `width: 26px; height: 26px;`,
    sm: `width: 18px; height: 18px;`,
    xs: `width: 14px; height: 14px;`,
    xxs: `width: 12px; height: 12px;`,

    fill: (v) => `fill: ${v};`,
    get: (v) => `width: ${v}px; height: ${v}px;`,
  },

  fill: {
    white: `fill: ${color.white};`,
    lightwhite: `fill: ${color.lightwhite};`,
    darkwhite: `fill: ${color.darkwhite};`,
    gray: `fill: ${color.gray};`,
    trans: `fill: ${color.trans};`,
    sky: `fill: ${color.sky};`,
    primary: `fill: ${color.primary};`,
    blue: `fill: ${color.blue};`,
    yellow: `fill: ${color.yellow};`,
    orange: `fill: ${color.orange};`,
    red: `fill: ${color.red};`,
    green: `fill: ${color.green};`,
    black: `fill: ${color.black};`,
    dark: `fill: ${color.dark};`,
    lightblack: `fill: ${color.lightblack};`,
    alphablack: `fill: ${color.alphablack};`,
    darkgray: `fill: ${color.darkgray};`,
    lightgray: `fill: ${color.lightgray};`,
    alphagray: `fill: ${color.alphagray};`,
    select: `fill: ${color.select};`,
    back: `fill: ${color.back};`,
    vgradint: 'fill: linear-gradient(45deg, #f1f8ff33, #c8e1ffa0);',

    color: (v) => `fill: ${v};`,
    get: (v) => `fill: ${v};`,
  },

  stroke: {
    line: 'stroke-width: 1px;',
    white: `stroke: ${color.white};`,
    lightwhite: `stroke: ${color.lightwhite};`,
    darkwhite: `stroke: ${color.darkwhite};`,
    gray: `stroke: ${color.gray};`,
    trans: `stroke: ${color.trans};`,
    sky: `stroke: ${color.sky};`,
    primary: `stroke: ${color.primary};`,
    blue: `stroke: ${color.blue};`,
    yellow: `stroke: ${color.yellow};`,
    orange: `stroke: ${color.orange};`,
    red: `stroke: ${color.red};`,
    green: `stroke: ${color.green};`,
    black: `stroke: ${color.black};`,
    dark: `stroke: ${color.dark};`,
    lightblack: `stroke: ${color.lightblack};`,
    alphablack: `stroke: ${color.alphablack};`,
    darkgray: `stroke: ${color.darkgray};`,
    lightgray: `stroke: ${color.lightgray};`,
    alphagray: `stroke: ${color.alphagray};`,
    select: `stroke: ${color.select};`,
    back: `stroke: ${color.back};`,
    vgradint: 'stroke: linear-gradient(45deg, #f1f8ff33, #c8e1ffa0);',

    color: (v) => `stroke: ${v};`,
    get: (v) => `stroke: ${v};`,
    width: (v) => `stroke-width: ${v};`,
  },

  box: {
    radius: `border-radius: 5px;`,
    round: `border-radius: 10px;`,
    circle: `border-radius: 100%;`,
    line: `border: solid 1px ${color.gray};`,
    doted: `border: doted 1px ${color.gray};`,
    dashed: `border: dashed 1px ${color.gray};`,
    shadow: `box-shadow: 1px 1px 2px 2px #2121219c;`,
    inner: `box-sizing: border-box;`,

    style: (v) => `border-style: ${v};`,
    left: (v) => Number.isInteger(v) ? `border-left: solid ${v}px ${color.lightgray};` : `border-left: ${v};`,
    right: (v) => Number.isInteger(v) ? `border-right: solid ${v}px ${color.lightgray};` : `border-right: ${v};`,
    top: (v) => Number.isInteger(v) ? `border-top: solid ${v}px ${color.lightgray};` : `border-top: ${v};`,
    bottom: (v) => Number.isInteger(v) ? `border-bottom: solid ${v}px ${color.lightgray};` : `border-bottom: ${v};`,
    get: (v) => `border: ${v};`,
    sizing: (v) => `box-sizing: ${v};`,
  },

  border: {
    none: `border: solid 0px ${color.trans};`,
    line: `border: solid 1px ${color.lightgray};`,
    left: `border-left: solid 1px ${color.lightgray};`,
    right: `border-right: solid 1px ${color.lightgray};`,
    top: `border-top: solid 1px ${color.lightgray};`,
    bottom: `border-bottom: solid 1px ${color.lightgray};`,
    white: `border-color: ${color.white};`,
    lightwhite: `border-color: ${color.lightwhite};`,
    gray: `border-color: ${color.gray};`,
    trans: `border-color: ${color.trans};`,
    primary: `border-color: ${color.primary};`,
    yellow: `border-color: ${color.yellow};`,
    orange: `border-color: ${color.orange};`,
    red: `border-color: ${color.red};`,
    green: `border-color: ${color.green};`,
    black: `border-color: ${color.black};`,
    dark: `border-color: ${color.dark};`,
    alphablack: `border-color: ${color.alphablack};`,
    darkgray: `border-color: ${color.darkgray};`,
    lightgray: `border-color: ${color.lightgray};`,
    semiblack: `border-color: ${color.semiblack};`,

    shadow: (v) => v ? `box-shadow: ${v};` : `box-shadow: 0 1px 3px 0 rgba(0,0,0,0.6), 0 4px 8px 3px rgba(0,0,0,0.3);`,
    color: (v) => `border-color: ${v};`,
    width: (v) => Number.isInteger(v) ? `border-width: ${v}px;` : `border-width: ${v};`,
    get: (v) => `border: ${v};`,
    radius: (v) => Number.isInteger(v) ? `border-radius: ${v}px;` : `border-radius: ${v};`,
    outline: (v) => `outline: ${v};`,
  },

  m: {
    a0: 'margin: 0;',
    a1: 'margin: 1px;',
    a2: 'margin: 2px;',
    a3: 'margin: 3px;',
    a5: 'margin: 5px;',
    a10: 'margin: 10px;',
    a15: 'margin: 15px;',
    a20: 'margin: 20px;',
    a25: 'margin: 25px;',
    a30: 'margin: 30px;',
    a40: 'margin: 40px;',
    a50: 'margin: 50px;',

    h0: 'margin-left: 0; margin-right: 0;',
    h1: 'margin-left: 1px; margin-right: 1px;',
    h2: 'margin-left: 2px; margin-right: 2px;',
    h3: 'margin-left: 3px; margin-right: 3px;',
    h5: 'margin-left: 5px; margin-right: 5px;',
    h10: 'margin-left: 10px; margin-right: 10px;',
    h15: 'margin-left: 15px; margin-right: 15px;',
    h20: 'margin-left: 20px; margin-right: 20px;',
    h25: 'margin-left: 25px; margin-right: 25px;',
    h30: 'margin-left: 30px; margin-right: 30px;',
    h40: 'margin-left: 40px; margin-right: 40px;',
    h50: 'margin-left: 50px; margin-right: 50px;',

    v0: 'margin-top: 0; margin-bottom: 0;',
    v1: 'margin-top: 1px; margin-bottom: 1px;',
    v2: 'margin-top: 2px; margin-bottom: 2px;',
    v3: 'margin-top: 3px; margin-bottom: 3px;',
    v5: 'margin-top: 5px; margin-bottom: 5px;',
    v10: 'margin-top: 10px; margin-bottom: 10px;',
    v15: 'margin-top: 15px; margin-bottom: 15px;',
    v20: 'margin-top: 20px; margin-bottom: 20px;',
    v25: 'margin-top: 25px; margin-bottom: 25px;',
    v30: 'margin-top: 30px; margin-bottom: 30px;',
    v40: 'margin-top: 40px; margin-bottom: 40px;',
    v50: 'margin-top: 50px; margin-bottom: 50px;',

    t0: 'margin-top: 0;',
    t1: 'margin-top: 1px;',
    t2: 'margin-top: 2px;',
    t3: 'margin-top: 3px;',
    t5: 'margin-top: 5px;',
    t10: 'margin-top: 10px;',
    t15: 'margin-top: 15px;',
    t20: 'margin-top: 20px;',
    t25: 'margin-top: 25px;',
    t30: 'margin-top: 30px;',
    t40: 'margin-top: 40px;',
    t50: 'margin-top: 50px;',

    b0: 'margin-bottom: 0;',
    b1: 'margin-bottom: 1px;',
    b2: 'margin-bottom: 2px;',
    b3: 'margin-bottom: 3px;',
    b5: 'margin-bottom: 5px;',
    b10: 'margin-bottom: 10px;',
    b15: 'margin-bottom: 15px;',
    b20: 'margin-bottom: 20px;',
    b25: 'margin-bottom: 25px;',
    b30: 'margin-bottom: 30px;',
    b40: 'margin-bottom: 40px;',
    b50: 'margin-bottom: 50px;',

    l0: 'margin-left: 0;',
    l1: 'margin-left: 1px;',
    l2: 'margin-left: 2px;',
    l3: 'margin-left: 3px;',
    l5: 'margin-left: 5px;',
    l10: 'margin-left: 10px;',
    l15: 'margin-left: 15px;',
    l20: 'margin-left: 20px;',
    l25: 'margin-left: 25px;',
    l30: 'margin-left: 30px;',
    l40: 'margin-left: 40px;',
    l50: 'margin-left: 50px;',

    r0: 'margin-right: 0;',
    r1: 'margin-right: 1px;',
    r2: 'margin-right: 2px;',
    r3: 'margin-right: 3px;',
    r5: 'margin-right: 5px;',
    r10: 'margin-right: 10px;',
    r15: 'margin-right: 15px;',
    r20: 'margin-right: 20px;',
    r25: 'margin-right: 25px;',
    r30: 'margin-right: 30px;',
    r40: 'margin-right: 40px;',
    r50: 'margin-right: 50px;',

    left: (v) => Number.isInteger(v) ? `margin-left: ${v}px;` : `margin-left: ${v};`,
    right: (v) => Number.isInteger(v) ? `margin-right: ${v}px;` : `margin-right ${v};`,
    top: (v) => Number.isInteger(v) ? `margin-top: ${v}px;` : `margin-top: ${v};`,
    bottom: (v) => Number.isInteger(v) ? `margin-bottom: ${v}px;` : `margin-bottom: ${v};`,
    get: (v) => Number.isInteger(v) ? `margin: ${v}px;` : `margin: ${v};`,
  },

  p: {
    a0: 'padding: 0;',
    a1: 'padding: 1px;',
    a2: 'padding: 2px;',
    a3: 'padding: 3px;',
    a5: 'padding: 5px;',
    a10: 'padding: 10px;',
    a15: 'padding: 15px;',
    a20: 'padding: 20px;',
    a25: 'padding: 25px;',
    a30: 'padding: 30px;',
    a40: 'padding: 40px;',
    a50: 'padding: 50px;',

    h0: 'padding-left: 0; padding-right: 0;',
    h1: 'padding-left: 1px; padding-right: 1px;',
    h2: 'padding-left: 2px; padding-right: 2px;',
    h3: 'padding-left: 3px; padding-right: 3px;',
    h5: 'padding-left: 5px; padding-right: 5px;',
    h10: 'padding-left: 10px; padding-right: 10px;',
    h15: 'padding-left: 15px; padding-right: 15px;',
    h20: 'padding-left: 20px; padding-right: 20px;',
    h25: 'padding-left: 25px; padding-right: 25px;',
    h30: 'padding-left: 30px; padding-right: 30px;',
    h40: 'padding-left: 40px; padding-right: 40px;',
    h50: 'padding-left: 50px; padding-right: 50px;',

    v0: 'padding-top: 0; padding-bottom: 0;',
    v1: 'padding-top: 1px; padding-bottom: 1px;',
    v2: 'padding-top: 2px; padding-bottom: 2px;',
    v3: 'padding-top: 3px; padding-bottom: 3px;',
    v5: 'padding-top: 5px; padding-bottom: 5px;',
    v10: 'padding-top: 10px; padding-bottom: 10px;',
    v15: 'padding-top: 15px; padding-bottom: 15px;',
    v20: 'padding-top: 20px; padding-bottom: 20px;',
    v25: 'padding-top: 25px; padding-bottom: 25px;',
    v30: 'padding-top: 30px; padding-bottom: 30px;',
    v40: 'padding-top: 40px; padding-bottom: 40px;',
    v50: 'padding-top: 50px; padding-bottom: 50px;',

    t0: 'padding-top: 0;',
    t1: 'padding-top: 1px;',
    t2: 'padding-top: 2px;',
    t3: 'padding-top: 3px;',
    t5: 'padding-top: 5px;',
    t10: 'padding-top: 10px;',
    t15: 'padding-top: 15px;',
    t20: 'padding-top: 20px;',
    t25: 'padding-top: 25px;',
    t30: 'padding-top: 30px;',
    t40: 'padding-top: 40px;',
    t50: 'padding-top: 50px;',

    b0: 'padding-bottom: 0;',
    b1: 'padding-bottom: 1px;',
    b2: 'padding-bottom: 2px;',
    b3: 'padding-bottom: 3px;',
    b5: 'padding-bottom: 5px;',
    b10: 'padding-bottom: 10px;',
    b15: 'padding-bottom: 15px;',
    b20: 'padding-bottom: 20px;',
    b25: 'padding-bottom: 25px;',
    b30: 'padding-bottom: 30px;',
    b40: 'padding-bottom: 40px;',
    b50: 'padding-bottom: 50px;',

    l0: 'padding-left: 0;',
    l1: 'padding-left: 1px;',
    l2: 'padding-left: 2px;',
    l3: 'padding-left: 3px;',
    l5: 'padding-left: 5px;',
    l10: 'padding-left: 10px;',
    l15: 'padding-left: 15px;',
    l20: 'padding-left: 20px;',
    l25: 'padding-left: 25px;',
    l30: 'padding-left: 30px;',
    l40: 'padding-left: 40px;',
    l50: 'padding-left: 50px;',

    r0: 'padding-right: 0;',
    r1: 'padding-right: 1px;',
    r2: 'padding-right: 2px;',
    r3: 'padding-right: 3px;',
    r5: 'padding-right: 5px;',
    r10: 'padding-right: 10px;',
    r15: 'padding-right: 15px;',
    r20: 'padding-right: 20px;',
    r25: 'padding-right: 25px;',
    r30: 'padding-right: 30px;',
    r40: 'padding-right: 40px;',
    r50: 'padding-right: 50px;',

    left: (v) => Number.isInteger(v) ? `padding-left: ${v}px;` : `padding-left: ${v};`,
    right: (v) => Number.isInteger(v) ? `padding-right: ${v}px;` : `padding:-right ${v};`,
    top: (v) => Number.isInteger(v) ? `padding-top: ${v}px;` : `padding-top: ${v};`,
    bottom: (v) => Number.isInteger(v) ? `padding-bottom: ${v}px;` : `padding-bottom: ${v};`,
    get: (v) => Number.isInteger(v) ? `padding: ${v}px;` : `padding: ${v};`,
  },

  scrollbar: {
    t1: `
    ::-webkit-scrollbar { width: 10px; background-color: #F5F5F5; }
    ::-webkit-scrollbar-track { -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); border-radius: 0; background-color: rgb(128, 128, 128); }
    ::-webkit-scrollbar-thumb { border-radius: 0; -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3); background-color: rgba(68, 68, 68, 1); }
    `,
    t2: `
    ::-webkit-scrollbar { width: 6px; background-color: #F5F5F5; }
    ::-webkit-scrollbar-track { -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); background-color: #F5F5F5; }
    ::-webkit-scrollbar-thumb { background-color: #000000; }
    `,
    t3: `
    ::-webkit-scrollbar { width: 4px }
    ::-webkit-scrollbar-track { -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3); }
    ::-webkit-scrollbar-thumb { background-color: rgb(29, 29, 29); outline: 1px solid rgba(0, 0, 0, 0.658); }
    `,
    t4: `
    ::-webkit-scrollbar { width: 12px }
    ::-webkit-scrollbar-track { -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.2); }
    ::-webkit-scrollbar-thumb { background-color: darkgrey; outline: 1px solid #a0a0a087; }
    `,
  },
};

export default cs;